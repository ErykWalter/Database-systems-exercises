SELECT NAME, SURNAME, d.DEPT_NAME, d.ADDRESS 
FROM EMPLOYEES e 
INNER JOIN DEPARTMENTS d ON e.DEPT_ID  = d.DEPT_ID 
ORDER BY SURNAME;
SELECT 
	'Employee' || NAME || ' ' || SURNAME || ' works in ' || d.DEPT_NAME || ' located at ' || d.ADDRESS AS "sentence"
FROM EMPLOYEES e 
INNER JOIN DEPARTMENTS d ON e.DEPT_ID  = d.DEPT_ID 
ORDER BY SURNAME;
SELECT SURNAME , SALARY 
FROM EMPLOYEES e 
INNER JOIN DEPARTMENTS d ON d.DEPT_ID = e.DEPT_ID 
WHERE d.ADDRESS LIKE '47TH STR'
ORDER BY SURNAME;
SELECT COUNT(*) AS "num_of_employees", ROUND(AVG(SALARY), 2) AS "average_salary"  
FROM EMPLOYEES e 
INNER JOIN DEPARTMENTS d ON d.DEPT_ID = e.DEPT_ID 
WHERE d.ADDRESS LIKE '47TH STR'
ORDER BY SURNAME;
SELECT e.SURNAME, e.JOB , SALARY, j.MIN_SALARY AS "job_min_salary", j.MAX_SALARY AS "job_max_salary"
FROM EMPLOYEES e 
INNER JOIN JOBS j ON j.NAME = e.JOB 
ORDER BY SURNAME;
SELECT e.SURNAME, e.JOB , e.SALARY, j.MIN_SALARY AS "job_min_salary", j.MAX_SALARY AS "job_max_salary"
FROM EMPLOYEES e 
INNER JOIN JOBS j ON j.NAME = e.JOB 
WHERE e.SALARY < j.MIN_SALARY OR  e.SALARY > j.MAX_SALARY 
ORDER BY SURNAME; 
SELECT e.SURNAME, e.JOB , e.SALARY, j.MIN_SALARY AS "job_min_salary", j.MAX_SALARY AS "job_max_salary"
FROM EMPLOYEES e 
INNER JOIN JOBS j ON j.NAME = 'ASSISTANT' 
WHERE e.SALARY > j.MIN_SALARY AND e.SALARY < j.MAX_SALARY 
ORDER BY SURNAME; 
SELECT d.DEPT_NAME AS "department", COUNT(*) AS "employees_at_dept", SUM(e.SALARY) AS "salaries_at_dept"
FROM DEPARTMENTS d 
INNER JOIN EMPLOYEES e ON d.DEPT_ID = e.DEPT_ID 
GROUP BY d.DEPT_NAME  
ORDER BY d.DEPT_NAME;
SELECT d.DEPT_NAME AS "department", COUNT(*) AS "employees_at_dept", SUM(e.SALARY) AS "salaries_at_dept"
FROM DEPARTMENTS d 
INNER JOIN EMPLOYEES e ON d.DEPT_ID = e.DEPT_ID 
GROUP BY d.DEPT_NAME
HAVING COUNT(*) >= 2 
ORDER BY d.DEPT_NAME;
SELECT d.DEPT_NAME AS "department",
	CASE 
		WHEN COUNT(*) <= 2 THEN 'small'
		WHEN COUNT(*) <= 6 THEN 'medium'
		ELSE 'big'
	END AS "label"
FROM DEPARTMENTS d 
INNER JOIN EMPLOYEES e ON d.DEPT_ID = e.DEPT_ID 
GROUP BY d.DEPT_NAME
ORDER BY d.DEPT_NAME;