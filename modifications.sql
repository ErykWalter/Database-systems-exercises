--1
INSERT INTO Employees (emp_id, surname, name, job, boss_id, hire_date, salary, add_salary, dept_id)
VALUES (300, 'Snow', 'Jack', 'PROFESSOR', (SELECT e.emp_id FROM EMPLOYEES e WHERE e.NAME = 'John' AND e.SURNAME='Smith'),
	to_date('2013-05-01', 'yyyy-mm-dd'),
	4750.00, NULL, (SELECT d.dept_id FROM DEPARTMENTS d WHERE d.DEPT_NAME = 'EXPERT SYSTEMS'));

INSERT INTO Employees (emp_id, surname, name, job, boss_id, hire_date, salary, add_salary, dept_id)
VALUES (310, 'Cook', 'Robin', 'PROFESSOR', (SELECT e.emp_id FROM EMPLOYEES e WHERE e.NAME = 'John' AND e.SURNAME='Smith'),
	to_date('2016-09-15','yyyy-mm-dd') , 3500.00, 1250.00, (SELECT d.dept_id FROM DEPARTMENTS d WHERE d.DEPT_NAME = 'ALGORITHMS'));

INSERT INTO Employees (emp_id, surname, name, job, boss_id, hire_date, salary, add_salary, dept_id)
VALUES (320, 'Dormand', 'Francis', 'ASSISTANT', (SELECT e.emp_id FROM EMPLOYEES e WHERE e.NAME = 'John' AND e.SURNAME='Smith'), 
      to_date('2018-01-01', 'yyyy-mm-dd'), 3900.00, NULL, (SELECT d.dept_id FROM DEPARTMENTS d WHERE d.DEPT_NAME = 'ALGORITHMS'));
     
SELECT *
FROM EMPLOYEES e 
WHERE EMP_ID IN (300, 310, 320);

--2
INSERT INTO DEPARTMENTS (dept_id, DEPT_NAME)
VALUES (70, 'DATABASE SYSTEMS');

SELECT *
FROM DEPARTMENTS d 
WHERE d.DEPT_ID = 70;

--3
UPDATE EMPLOYEES 
SET DEPT_ID = (SELECT DEPT_ID FROM DEPARTMENTS d WHERE d.DEPT_NAME = 'DATABASE SYSTEMS')
WHERE EMP_ID IN (300, 310, 320);

SELECT e.SURNAME, e.NAME, e.SALARY, e.ADD_SALARY
FROM EMPLOYEES e 
WHERE e.DEPT_ID = (SELECT DEPT_ID FROM DEPARTMENTS d WHERE d.DEPT_NAME = 'DATABASE SYSTEMS')
ORDER BY e.SURNAME;

--4
UPDATE EMPLOYEES 
SET SALARY = SALARY*1.1, 
	ADD_SALARY = COALESCE(ADD_SALARY*1.2, 100)
WHERE DEPT_ID = (SELECT DEPT_ID FROM DEPARTMENTS d WHERE d.DEPT_NAME = 'DATABASE SYSTEMS');

SELECT e.SURNAME, e.NAME, e.SALARY, e.ADD_SALARY
FROM EMPLOYEES e 
WHERE e.DEPT_ID = (SELECT DEPT_ID FROM DEPARTMENTS d WHERE d.DEPT_NAME = 'DATABASE SYSTEMS')
ORDER BY e.SURNAME;

--5
UPDATE EMPLOYEES 
SET SALARY = SALARY + 
	(SELECT AVG(e.salary)*0.1 
	FROM EMPLOYEES e JOIN DEPARTMENTS d ON d.DEPT_ID = e.DEPT_ID
	WHERE d.DEPT_NAME = 'ADMINISTRATION')
WHERE DEPT_ID = (SELECT DEPT_ID FROM DEPARTMENTS d WHERE d.DEPT_NAME = 'DATABASE SYSTEMS');

SELECT e.SURNAME, e.NAME, e.SALARY
FROM EMPLOYEES e 
WHERE e.DEPT_ID = (SELECT DEPT_ID FROM DEPARTMENTS d WHERE d.DEPT_NAME = 'DATABASE SYSTEMS')
ORDER BY e.SURNAME;

--6
DELETE FROM DEPARTMENTS d 
WHERE d.DEPT_NAME = 'DATABASE SYSTEMS';
--This operation ends with error because there is a there is a integrity constraint which tells that no employee can be linked to a nonexisting department

--7
DELETE FROM EMPLOYEES e 
WHERE e.SALARY < 5000 AND e.DEPT_ID = (SELECT DEPT_ID FROM DEPARTMENTS d WHERE d.DEPT_NAME = 'DATABASE SYSTEMS');

UPDATE EMPLOYEES 
SET DEPT_ID = NULL 
WHERE DEPT_ID = (SELECT DEPT_ID FROM DEPARTMENTS d WHERE d.DEPT_NAME = 'DATABASE SYSTEMS');

SELECT *
FROM EMPLOYEES e
ORDER BY e.EMP_ID;

--8
DELETE FROM DEPARTMENTS d 
WHERE d.DEPT_NAME = 'DATABASE SYSTEMS';

SELECT *
FROM DEPARTMENTS d
ORDER BY d.DEPT_ID;

--9
DELETE FROM EMPLOYEES e 
WHERE e.NAME = 'Jack' AND e.SURNAME = 'Snow' AND e.DEPT_ID IS NULL;

SELECT *
FROM EMPLOYEES e 
ORDER BY e.EMP_ID;
